name: Release
on:
  push:
    branches:
      - master
      - feature/semantic-release-build
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - { name: windows64, GOOS: windows, GOARCH: amd64, BIN: "dockerized.exe" }
    steps:
      - uses: actions/checkout@v2
        with:
          path: dockerized
      - run: mkdir -p release/${{ matrix.target.name }}
      - name: Copy static assets
        working-directory: release/${{ matrix.target.name }}
        run: |
          DOCKERIZED=$GITHUB_WORKSPACE/dockerized
          cp -r $DOCKERIZED/apps .
          cp -r $DOCKERIZED/.env .
          cp -r $DOCKERIZED/*.md .

      - name: Build
        env:
          GOOS: "${{ matrix.target.GOOS }}"
          BIN: "${{ matrix.target.BIN }}"
          GO_VERSION: "1.17.8"
        run: |
          cd dockerized
          bin/dockerized go build -o build/$BIN lib/dockerized.go
          mv build/$BIN $GITHUB_WORKSPACE/release/${{ matrix.target.name }}/
      - name: Zip
        working-directory: release/${{ matrix.target.name }}
        run: |
          zip -r $GITHUB_WORKSPACE/release/${{ matrix.target.name }}.zip .
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release --dry-run